{
  "contractName": "KIP17FullMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific KIP17 token.\",\"params\":{\"tokenId\":\"uint256 id of the KIP17 token to be burned.\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onKIP17Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onKIP17Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IKIP13.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"KIP17FullMock This mock just provides public functions for setting metadata URI, getting all tokens of an owner, checking token existence, removal of a token from an address\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/mocks/KIP17FullMock.sol\":\"KIP17FullMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzz-raw://22e54aa25d633d51efaadb0c956ddd80616a79ee79a41bb8d958473712732612\",\"dweb:/ipfs/QmNbiwWkL4v1i6TgrppGahxHBUHJUrLJLVc8EDb7DFsVDq\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzz-raw://072e8b5a1b5acfc2acba9b6fb87d1dc57065aad44572617ad46b014074969eb3\",\"dweb:/ipfs/QmVTDHUriaxBJqiWCWgWC8vYaYYfXSz883LsowzTx1DcpK\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/introspection/IKIP13.sol\":{\"keccak256\":\"0xf7415711dbec40bc633af7d8cb5c3c0bc3d1ed97fd8c13f795a03eb3073ea219\",\"urls\":[\"bzz-raw://c3583b6a39425cc359116200869b24b50c2293c6e68d09c4d4b804861b431ae0\",\"dweb:/ipfs/QmWZWD7oEtz7QbM5AmUtrbZpDVkxzeX8JGcVkUVmvRRaVa\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/introspection/KIP13.sol\":{\"keccak256\":\"0x84681701e79f53ba1e9660b6a130bba31880d66cee996ab7d5567d239155c6da\",\"urls\":[\"bzz-raw://f35082a91314003570fca4b2426cd3f79db0eb846a456842db4a11f473db924d\",\"dweb:/ipfs/QmYdHAyrXSKjiDxji2L7bTpuPSSqjkwaKT7WM98Yrcy8KD\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/mocks/KIP17FullMock.sol\":{\"keccak256\":\"0xf631528924ac9223886e7a8100df64360f5e3b9d6ce49c1ecd6791b24487b822\",\"urls\":[\"bzz-raw://26363829234d694f6c124a1e7f89712f3c2e1d0cfa160f3329a135385128e036\",\"dweb:/ipfs/QmZZU3hhPYQw3FAPDBSsAx3m2zaZmTDaogVA9sdAi33UHj\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzz-raw://90dceab42713246639100b87d6650037d68e4a2ab2dd4b5768c3ed35d6b3a4a0\",\"dweb:/ipfs/QmQ42UW5nchMoYP9bU9F1AJga5chG8j92fCPkURpiDKsCu\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IKIP17.sol\":{\"keccak256\":\"0x0b30e5fe64932d8b9343c7897ebb7a0ac15a15577ce5ec1f18c3ba4396120de0\",\"urls\":[\"bzz-raw://6acdc475b0e3ef3844ebd4fe82d4c7339dc396c88ec9f7e5be74cab763c3a321\",\"dweb:/ipfs/QmVvB1y1NLSjooVs5V47YGtESVQ5w3B5j2Md32N3EmRouh\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IKIP17Enumerable.sol\":{\"keccak256\":\"0x5a6a02f871bfcf213445ac1c3625af470cbd25599f915f2bbc0b7df0ed998031\",\"urls\":[\"bzz-raw://0cee69ae8a3e102f4ec137a1e43a1d4486e8c014fd8d82362031889ec94e7230\",\"dweb:/ipfs/QmcAVHNgpxhttC6ucA2JL53WtiLgphEPX8m7KDKTycHxAi\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IKIP17Metadata.sol\":{\"keccak256\":\"0xad2c2abcd4cb881620f297edcdf9cd491effc1ace2f12f468bf3546f940d1bf4\",\"urls\":[\"bzz-raw://a3b5f7a0bfb8ebfb163d2f9a8aaf773bf9d2ac5a729ffcf4bb52660be3cfff28\",\"dweb:/ipfs/QmerMoavH88mYcnSxL8dDcbiGdPeSpXFU4zAwjLqx39kCu\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IKIP17Receiver.sol\":{\"keccak256\":\"0xf3dee67a4a395e20ad0459e1f255b9c563272d2fb6752e7421c1302cfcf00ff0\",\"urls\":[\"bzz-raw://543148fce433ba69b724c8509064342f7685b5186684f54cfae8cdce709dd0ca\",\"dweb:/ipfs/QmeZxw2qq6wft5tBmHdjQH6u21qVP72dYFVPRcNiPJJR4T\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17.sol\":{\"keccak256\":\"0x3ffc95c0da23762b273dad189c551bc0591811ca96026b0da064464aa1f1ec4f\",\"urls\":[\"bzz-raw://a0092b30745a43e2a380e104baa47e1592627397c641b70a7bcc17829d0ce598\",\"dweb:/ipfs/Qmc5qcUgBzxzNe2jiUic3jG1YLS56XFvrwbavKEyzrDJ5h\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol\":{\"keccak256\":\"0x963af48c3e002f850c400d4d4a831232091c7c90f40ef45ad85e261937d3b65a\",\"urls\":[\"bzz-raw://4e13494d962b232d8551a49c49a8ecc6c2139bf792ae95488375d6ed7a59a3b6\",\"dweb:/ipfs/QmW1xQCzhkjn4N1MzETc9rRDBhuf7PVY866jEJ56LuMTiX\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Enumerable.sol\":{\"keccak256\":\"0x2f8ff9fe4b7b5d213a4df09a3de2807792dd199d6ce8ea938f6eec33b1802cff\",\"urls\":[\"bzz-raw://0bcad89f9bfab383dc1026813bacc3787f87322a7b6b1635fa2af0121fe812a6\",\"dweb:/ipfs/QmU7iej8vtPMFUsu4D16aJp3E6NC11giqH9FaEWzfS4V6C\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Full.sol\":{\"keccak256\":\"0xcfeb8dafffa1051bfc054427c4be5cdb2289c09fa4c898262798c753b0b1d9fb\",\"urls\":[\"bzz-raw://ca80a4284766e2c4b4caff6c7053c0a359b28fbe50e32d06c2d06aa923a40108\",\"dweb:/ipfs/QmbzeL3vABk4tYtoAeVxnNrPB597hyJ2UVYHPYToDwbwZf\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Metadata.sol\":{\"keccak256\":\"0x67db095981e55d1f88a38e7f794f85df18b9d2a4a8c6906c1d7b793af04a99b8\",\"urls\":[\"bzz-raw://3ac784d68c5d8f67b2547bad7968339330a57ec82449d2aa7c7f1bb767401d38\",\"dweb:/ipfs/QmQgHecFgof1GFi87UscmqT83NwM3jzWWKWop8UPYPfvzs\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17MetadataMintable.sol\":{\"keccak256\":\"0xb98b72e739981fb7b330201708c852e518edd8d8365e0c0dde862056b8934e41\",\"urls\":[\"bzz-raw://7e83389cf1f1496419df007bb54de205c7a0c100256bc5649ec7e2ae38181a7a\",\"dweb:/ipfs/QmWWKNjaixMtaarhFnLETkcofiBDraR3A7AS1jJjD6cyyn\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Mintable.sol\":{\"keccak256\":\"0x818e6cf7f762eac79743d620db790929e81d4d032bdc42c347669f0f6c0fd60d\",\"urls\":[\"bzz-raw://ccd304bface4561f379807d083c4d5838b3caa5400a0e0399335a023a4bfc09c\",\"dweb:/ipfs/QmWUJWvgQKPrRMF6v1M6hWHygse7Nt1nEwNBBKYvzbdqqp\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200318138038062003181833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052508391508290508181620001c06301ffc9a760e01b6001600160e01b03620002ab16565b620001db6380ac58cd60e01b6001600160e01b03620002ab16565b620001f663780e9d6360e01b6001600160e01b03620002ab16565b81516200020b90600990602085019062000478565b5080516200022190600a90602084019062000478565b506200023d635b5e139f60e01b6001600160e01b03620002ab16565b5050505062000252336200033060201b60201c565b6200026d630755c1f160e51b6001600160e01b03620002ab16565b62000288637d613fa360e11b6001600160e01b03620002ab16565b620002a3630852cd8d60e31b6001600160e01b03620002ab16565b50506200051d565b6001600160e01b031980821614156200030b576040805162461bcd60e51b815260206004820152601b60248201527f4b495031333a20696e76616c696420696e746572666163652069640000000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6200034b81600c6200038260201b620022ef1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6200039782826001600160e01b036200040f16565b15620003ea576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620004585760405162461bcd60e51b81526004018080602001828103825260228152602001806200315f6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620004bb57805160ff1916838001178555620004eb565b82800160010185558215620004eb579182015b82811115620004eb578251825591602001919060010190620004ce565b50620004f9929150620004fd565b5090565b6200051a91905b80821115620004f9576000815560010162000504565b90565b612c32806200052d6000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80634f6ccce7116100ee578063983b2d5611610097578063aa271e1a11610071578063aa271e1a14610728578063b88d4fde1461075b578063c87b56dd1461082e578063e985e9c51461084b576101a3565b8063983b2d56146106b257806398650275146106e5578063a22cb465146106ed576101a3565b806370a08231116100c857806370a08231146105f45780638462151c1461062757806395d89b41146106aa576101a3565b80634f6ccce7146104f257806350bb4e7f1461050f5780636352211e146105d7576101a3565b806323b872dd1161015057806342842e0e1161012a57806342842e0e1461047557806342966c68146104b85780634f558e79146104d5576101a3565b806323b872dd146103c05780632f745c591461040357806340c10f191461043c576101a3565b8063095ea7b311610181578063095ea7b3146102be578063162094c4146102f957806318160ddd146103a6576101a3565b806301ffc9a7146101a857806306fdde03146101fb578063081812fc14610278575b600080fd5b6101e7600480360360208110156101be57600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610886565b604080519115158252519081900360200190f35b6102036108bd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561023d578181015183820152602001610225565b50505050905090810190601f16801561026a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102956004803603602081101561028e57600080fd5b5035610972565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102f7600480360360408110156102d457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356109fb565b005b6102f76004803603604081101561030f57600080fd5b8135919081019060408101602082013564010000000081111561033157600080fd5b82018360208201111561034357600080fd5b8035906020019184600183028401116401000000008311171561036557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ba2945050505050565b6103ae610bb0565b60408051918252519081900360200190f35b6102f7600480360360608110156103d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610bb6565b6103ae6004803603604081101561041957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c25565b6101e76004803603604081101561045257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610ccb565b6102f76004803603606081101561048b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610d3e565b6102f7600480360360208110156104ce57600080fd5b5035610d59565b6101e7600480360360208110156104eb57600080fd5b5035610dc4565b6103ae6004803603602081101561050857600080fd5b5035610dd5565b6101e76004803603606081101561052557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561056257600080fd5b82018360208201111561057457600080fd5b8035906020019184600183028401116401000000008311171561059657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e55945050505050565b610295600480360360208110156105ed57600080fd5b5035610ed3565b6103ae6004803603602081101561060a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610f4e565b61065a6004803603602081101561063d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610fea565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561069657818101518382015260200161067e565b505050509050019250505060405180910390f35b61020361104b565b6102f7600480360360208110156106c857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166110ca565b6102f7611131565b6102f76004803603604081101561070357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135151561113c565b6101e76004803603602081101561073e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661125a565b6102f76004803603608081101561077157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235811692602081013590911691604082013591908101906080810160608201356401000000008111156107b957600080fd5b8201836020820111156107cb57600080fd5b803590602001918460018302840111640100000000831117156107ed57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061126d945050505050565b6102036004803603602081101561084457600080fd5b50356112df565b6101e76004803603604081101561086157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166113f2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60098054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109675780601f1061093c57610100808354040283529160200191610967565b820191906000526020600020905b81548152906001019060200180831161094a57829003601f168201915b505050505090505b90565b600061097d8261142d565b6109d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612b71602b913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610a0682610ed3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610aa357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e6572604482015290519081900360640190fd5b3373ffffffffffffffffffffffffffffffffffffffff82161480610acc5750610acc81336113f2565b610b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180612b9c6037913960400191505060405180910390fd5b60008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610bac8282611457565b5050565b60075490565b610bc033826114d4565b610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612a206030913960400191505060405180910390fd5b610c208383836115c6565b505050565b6000610c3083610f4e565b8210610c87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612952602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152600560205260409020805483908110610cb857fe5b9060005260206000200154905092915050565b6000610cd63361125a565b610d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061297c6030913960400191505060405180910390fd5b610d3583836115e5565b50600192915050565b610c208383836040518060200160405280600081525061126d565b610d6333826114d4565b610db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612aa2602f913960400191505060405180910390fd5b610dc181611602565b50565b6000610dcf8261142d565b92915050565b6000610ddf610bb0565b8210610e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612b22602b913960400191505060405180910390fd5b60078281548110610e4357fe5b90600052602060002001549050919050565b6000610e603361125a565b610eb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061297c6030913960400191505060405180910390fd5b610ebf84846115e5565b610ec98383611457565b5060019392505050565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610dcf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806129cd6028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612ad16029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610dcf90611614565b6060610ff582611618565b80548060200260200160405190810160405280929190818152602001828054801561103f57602002820191906000526020600020905b81548152602001906001019080831161102b575b50505050509050919050565b600a8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109675780601f1061093c57610100808354040283529160200191610967565b6110d33361125a565b611128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061297c6030913960400191505060405180910390fd5b610dc18161163f565b61113a33611694565b565b73ffffffffffffffffffffffffffffffffffffffff82163314156111c157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c65720000000000000000604482015290519081900360640190fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610dcf600c8363ffffffff6116e916565b611278848484610bb6565b61128484848484611784565b6112d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612a726030913960400191505060405180910390fd5b50505050565b60606112ea8261142d565b61133f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612901602e913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001861615020190931692909204918201849004840281018401909452808452909183018282801561103f5780601f106113c55761010080835404028352916020019161103f565b820191906000526020600020905b8154815290600101906020018083116113d35750939695505050505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b6114608261142d565b6114b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806129f5602b913960400191505060405180910390fd5b6000828152600b602090815260409091208251610c2092840190612804565b60006114df8261142d565b611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612bd3602b913960400191505060405180910390fd5b600061153f83610ed3565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115ae57508373ffffffffffffffffffffffffffffffffffffffff1661159684610972565b73ffffffffffffffffffffffffffffffffffffffff16145b806115be57506115be81856113f2565b949350505050565b6115d1838383611d24565b6115db8382611f02565b610c208282612056565b6115ef82826120a1565b6115f98282612056565b610bac81612245565b610dc161160e82610ed3565b82612289565b5490565b73ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902090565b611650600c8263ffffffff6122ef16565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6116a5600c8263ffffffff6123b516565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600073ffffffffffffffffffffffffffffffffffffffff8216611757576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612a506022913960400191505060405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b60008060606117a88673ffffffffffffffffffffffffffffffffffffffff16612461565b6117b7576001925050506115be565b8573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561188457818101518382015260200161186c565b50505050905090810190601f1680156118b15780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b6020831061198257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611945565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119e4576040519150601f19603f3d011682016040523d82523d6000602084013e6119e9565b606091505b508051919350915015801590611a57575080517f150b7a02000000000000000000000000000000000000000000000000000000009060208084019190811015611a3157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b15611a67576001925050506115be565b8573ffffffffffffffffffffffffffffffffffffffff16636745782b60e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b34578181015183820152602001611b1c565b50505050905090810190601f168015611b615780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b60208310611c3257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611bf5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611c94576040519150601f19603f3d011682016040523d82523d6000602084013e611c99565b606091505b508051919350915015801590611d07575080517f6745782b000000000000000000000000000000000000000000000000000000009060208084019190811015611ce157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b15611d17576001925050506115be565b5060009695505050505050565b8273ffffffffffffffffffffffffffffffffffffffff16611d4482610ed3565b73ffffffffffffffffffffffffffffffffffffffff1614611db0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612afa6028913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061292f6023913960400191505060405180910390fd5b611e2581612467565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020611e53906124c7565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020611e81906124de565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040812054611f3990600163ffffffff6124e716565b600083815260066020526040902054909150808214611ffb5773ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260408120805484908110611f8357fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fdb57fe5b600091825260208083209091019290925591825260069052604090208190555b73ffffffffffffffffffffffffffffffffffffffff8416600090815260056020526040902080549061204f907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301612882565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b73ffffffffffffffffffffffffffffffffffffffff821661212357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4b495031373a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61212c8161142d565b1561219857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4b495031373a20746f6b656e20616c7265616479206d696e7465640000000000604482015290519081900360640190fd5b600081815260016020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091558352600390915290206121fc906124de565b604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6122938282612530565b6000818152600b602052604090205460027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600184161502019091160415610bac576000818152600b60205260408120610bac916128a6565b6122f982826116e9565b1561236557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6123bf82826116e9565b612414576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129ac6021913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b3b151590565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610dc157600090815260026020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b80546124da90600163ffffffff6124e716565b9055565b80546001019055565b600061252983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061255c565b9392505050565b61253a828261260d565b6125448282611f02565b600081815260066020526040812055610bac8161274a565b60008184841115612605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156125ca5781810151838201526020016125b2565b50505050905090810190601f1680156125f75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b8173ffffffffffffffffffffffffffffffffffffffff1661262d82610ed3565b73ffffffffffffffffffffffffffffffffffffffff1614612699576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612b4d6024913960400191505060405180910390fd5b6126a281612467565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090206126d0906124c7565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555182919073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60075460009061276190600163ffffffff6124e716565b6000838152600860205260408120546007805493945090928490811061278357fe5b90600052602060002001549050806007838154811061279e57fe5b600091825260208083209091019290925582815260089091526040902082905560078054906127ef907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301612882565b50505060009182525060086020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061284557805160ff1916838001178555612872565b82800160010185558215612872579182015b82811115612872578251825591602001919060010190612857565b5061287e9291506128e6565b5090565b815481835581811115610c2057600083815260209020610c209181019083016128e6565b50805460018160011615610100020316600290046000825580601f106128cc5750610dc1565b601f016020900490600052602060002090810190610dc191905b61096f91905b8082111561287e57600081556001016128ec56fe4b495031374d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e7366657220746f20746865207a65726f20616464726573734b49503137456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654b495031373a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031374d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734b495031373a207472616e7366657220746f206e6f6e204b49503137526563656976657220696d706c656d656e7465724b495031374275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734b495031373a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4b49503137456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734b495031373a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4b495031373a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656ea265627a7a723158200fa365b5b6f44739cd984f0820fc4f2310fb1e99e2194747fbff83fb1aa90d6264736f6c63430005110032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a35760003560e01c80634f6ccce7116100ee578063983b2d5611610097578063aa271e1a11610071578063aa271e1a14610728578063b88d4fde1461075b578063c87b56dd1461082e578063e985e9c51461084b576101a3565b8063983b2d56146106b257806398650275146106e5578063a22cb465146106ed576101a3565b806370a08231116100c857806370a08231146105f45780638462151c1461062757806395d89b41146106aa576101a3565b80634f6ccce7146104f257806350bb4e7f1461050f5780636352211e146105d7576101a3565b806323b872dd1161015057806342842e0e1161012a57806342842e0e1461047557806342966c68146104b85780634f558e79146104d5576101a3565b806323b872dd146103c05780632f745c591461040357806340c10f191461043c576101a3565b8063095ea7b311610181578063095ea7b3146102be578063162094c4146102f957806318160ddd146103a6576101a3565b806301ffc9a7146101a857806306fdde03146101fb578063081812fc14610278575b600080fd5b6101e7600480360360208110156101be57600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610886565b604080519115158252519081900360200190f35b6102036108bd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561023d578181015183820152602001610225565b50505050905090810190601f16801561026a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102956004803603602081101561028e57600080fd5b5035610972565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102f7600480360360408110156102d457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356109fb565b005b6102f76004803603604081101561030f57600080fd5b8135919081019060408101602082013564010000000081111561033157600080fd5b82018360208201111561034357600080fd5b8035906020019184600183028401116401000000008311171561036557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ba2945050505050565b6103ae610bb0565b60408051918252519081900360200190f35b6102f7600480360360608110156103d657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610bb6565b6103ae6004803603604081101561041957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c25565b6101e76004803603604081101561045257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610ccb565b6102f76004803603606081101561048b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610d3e565b6102f7600480360360208110156104ce57600080fd5b5035610d59565b6101e7600480360360208110156104eb57600080fd5b5035610dc4565b6103ae6004803603602081101561050857600080fd5b5035610dd5565b6101e76004803603606081101561052557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160208101359181019060608101604082013564010000000081111561056257600080fd5b82018360208201111561057457600080fd5b8035906020019184600183028401116401000000008311171561059657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e55945050505050565b610295600480360360208110156105ed57600080fd5b5035610ed3565b6103ae6004803603602081101561060a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610f4e565b61065a6004803603602081101561063d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610fea565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561069657818101518382015260200161067e565b505050509050019250505060405180910390f35b61020361104b565b6102f7600480360360208110156106c857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166110ca565b6102f7611131565b6102f76004803603604081101561070357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135151561113c565b6101e76004803603602081101561073e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661125a565b6102f76004803603608081101561077157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235811692602081013590911691604082013591908101906080810160608201356401000000008111156107b957600080fd5b8201836020820111156107cb57600080fd5b803590602001918460018302840111640100000000831117156107ed57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061126d945050505050565b6102036004803603602081101561084457600080fd5b50356112df565b6101e76004803603604081101561086157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166113f2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60098054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109675780601f1061093c57610100808354040283529160200191610967565b820191906000526020600020905b81548152906001019060200180831161094a57829003601f168201915b505050505090505b90565b600061097d8261142d565b6109d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612b71602b913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610a0682610ed3565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610aa357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e6572604482015290519081900360640190fd5b3373ffffffffffffffffffffffffffffffffffffffff82161480610acc5750610acc81336113f2565b610b21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180612b9c6037913960400191505060405180910390fd5b60008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610bac8282611457565b5050565b60075490565b610bc033826114d4565b610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612a206030913960400191505060405180910390fd5b610c208383836115c6565b505050565b6000610c3083610f4e565b8210610c87576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612952602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152600560205260409020805483908110610cb857fe5b9060005260206000200154905092915050565b6000610cd63361125a565b610d2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061297c6030913960400191505060405180910390fd5b610d3583836115e5565b50600192915050565b610c208383836040518060200160405280600081525061126d565b610d6333826114d4565b610db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612aa2602f913960400191505060405180910390fd5b610dc181611602565b50565b6000610dcf8261142d565b92915050565b6000610ddf610bb0565b8210610e36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612b22602b913960400191505060405180910390fd5b60078281548110610e4357fe5b90600052602060002001549050919050565b6000610e603361125a565b610eb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061297c6030913960400191505060405180910390fd5b610ebf84846115e5565b610ec98383611457565b5060019392505050565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610dcf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806129cd6028913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff8216610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612ad16029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610dcf90611614565b6060610ff582611618565b80548060200260200160405190810160405280929190818152602001828054801561103f57602002820191906000526020600020905b81548152602001906001019080831161102b575b50505050509050919050565b600a8054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109675780601f1061093c57610100808354040283529160200191610967565b6110d33361125a565b611128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061297c6030913960400191505060405180910390fd5b610dc18161163f565b61113a33611694565b565b73ffffffffffffffffffffffffffffffffffffffff82163314156111c157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c65720000000000000000604482015290519081900360640190fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610dcf600c8363ffffffff6116e916565b611278848484610bb6565b61128484848484611784565b6112d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180612a726030913960400191505060405180910390fd5b50505050565b60606112ea8261142d565b61133f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612901602e913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001861615020190931692909204918201849004840281018401909452808452909183018282801561103f5780601f106113c55761010080835404028352916020019161103f565b820191906000526020600020905b8154815290600101906020018083116113d35750939695505050505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b6114608261142d565b6114b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806129f5602b913960400191505060405180910390fd5b6000828152600b602090815260409091208251610c2092840190612804565b60006114df8261142d565b611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612bd3602b913960400191505060405180910390fd5b600061153f83610ed3565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115ae57508373ffffffffffffffffffffffffffffffffffffffff1661159684610972565b73ffffffffffffffffffffffffffffffffffffffff16145b806115be57506115be81856113f2565b949350505050565b6115d1838383611d24565b6115db8382611f02565b610c208282612056565b6115ef82826120a1565b6115f98282612056565b610bac81612245565b610dc161160e82610ed3565b82612289565b5490565b73ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902090565b611650600c8263ffffffff6122ef16565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6116a5600c8263ffffffff6123b516565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600073ffffffffffffffffffffffffffffffffffffffff8216611757576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612a506022913960400191505060405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b60008060606117a88673ffffffffffffffffffffffffffffffffffffffff16612461565b6117b7576001925050506115be565b8573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561188457818101518382015260200161186c565b50505050905090810190601f1680156118b15780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b6020831061198257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611945565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146119e4576040519150601f19603f3d011682016040523d82523d6000602084013e6119e9565b606091505b508051919350915015801590611a57575080517f150b7a02000000000000000000000000000000000000000000000000000000009060208084019190811015611a3157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b15611a67576001925050506115be565b8573ffffffffffffffffffffffffffffffffffffffff16636745782b60e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b34578181015183820152602001611b1c565b50505050905090810190601f168015611b615780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b60208310611c3257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611bf5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611c94576040519150601f19603f3d011682016040523d82523d6000602084013e611c99565b606091505b508051919350915015801590611d07575080517f6745782b000000000000000000000000000000000000000000000000000000009060208084019190811015611ce157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b15611d17576001925050506115be565b5060009695505050505050565b8273ffffffffffffffffffffffffffffffffffffffff16611d4482610ed3565b73ffffffffffffffffffffffffffffffffffffffff1614611db0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612afa6028913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216611e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061292f6023913960400191505060405180910390fd5b611e2581612467565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020611e53906124c7565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020611e81906124de565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040812054611f3990600163ffffffff6124e716565b600083815260066020526040902054909150808214611ffb5773ffffffffffffffffffffffffffffffffffffffff84166000908152600560205260408120805484908110611f8357fe5b9060005260206000200154905080600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611fdb57fe5b600091825260208083209091019290925591825260069052604090208190555b73ffffffffffffffffffffffffffffffffffffffff8416600090815260056020526040902080549061204f907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301612882565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff90911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b73ffffffffffffffffffffffffffffffffffffffff821661212357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4b495031373a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61212c8161142d565b1561219857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4b495031373a20746f6b656e20616c7265616479206d696e7465640000000000604482015290519081900360640190fd5b600081815260016020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87169081179091558352600390915290206121fc906124de565b604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6122938282612530565b6000818152600b602052604090205460027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600184161502019091160415610bac576000818152600b60205260408120610bac916128a6565b6122f982826116e9565b1561236557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6123bf82826116e9565b612414576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806129ac6021913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b3b151590565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610dc157600090815260026020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b80546124da90600163ffffffff6124e716565b9055565b80546001019055565b600061252983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061255c565b9392505050565b61253a828261260d565b6125448282611f02565b600081815260066020526040812055610bac8161274a565b60008184841115612605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156125ca5781810151838201526020016125b2565b50505050905090810190601f1680156125f75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b8173ffffffffffffffffffffffffffffffffffffffff1661262d82610ed3565b73ffffffffffffffffffffffffffffffffffffffff1614612699576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612b4d6024913960400191505060405180910390fd5b6126a281612467565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090206126d0906124c7565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555182919073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60075460009061276190600163ffffffff6124e716565b6000838152600860205260408120546007805493945090928490811061278357fe5b90600052602060002001549050806007838154811061279e57fe5b600091825260208083209091019290925582815260089091526040902082905560078054906127ef907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301612882565b50505060009182525060086020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061284557805160ff1916838001178555612872565b82800160010185558215612872579182015b82811115612872578251825591602001919060010190612857565b5061287e9291506128e6565b5090565b815481835581811115610c2057600083815260209020610c209181019083016128e6565b50805460018160011615610100020316600290046000825580601f106128cc5750610dc1565b601f016020900490600052602060002090810190610dc191905b61096f91905b8082111561287e57600081556001016128ec56fe4b495031374d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e7366657220746f20746865207a65726f20616464726573734b49503137456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654b495031373a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031374d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734b495031373a207472616e7366657220746f206e6f6e204b49503137526563656976657220696d706c656d656e7465724b495031374275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734b495031373a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4b49503137456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734b495031373a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4b495031373a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656ea265627a7a723158200fa365b5b6f44739cd984f0820fc4f2310fb1e99e2194747fbff83fb1aa90d6264736f6c63430005110032",
  "sourceMap": "400:610:19:-;;;495:166;8:9:-1;5:2;;;30:1;27;20:12;5:2;495:166:19;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;495:166:19;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;495:166:19;;420:4:-1;411:14;;;;495:166:19;;;;;411:14:-1;495:166:19;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;495:166:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;495:166:19;;420:4:-1;411:14;;;;495:166:19;;;;;411:14:-1;495:166:19;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;495:166:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;495:166:19;;-1:-1:-1;583:4:19;;-1:-1:-1;589:6:19;;-1:-1:-1;583:4:19;589:6;712:39:8;-1:-1:-1;;;;;;;;712:18:8;:39;:::i;:::-;2485::43;-1:-1:-1;;;;;;;;2485:18:43;:39;:::i;:::-;1320:50:45;-1:-1:-1;;;;;;;;1320:18:45;:50;:::i;:::-;817:12:47;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;839:16:47;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;941:48:47;-1:-1:-1;;;;;;;;941:18:47;:48;:::i;:::-;745:251;;460:154:46;;275:22:4;286:10;275;;;:22;;:::i;:::-;799:48:49;-1:-1:-1;;;;;;;;799:18:49;:48;:::i;:::-;928:57:48;-1:-1:-1;;;;;;;;928:18:48;:57;:::i;:::-;655:48:44;-1:-1:-1;;;;;;;;655:18:44;:48;:::i;:::-;495:166:19;;400:610;;1431:189:8;-1:-1:-1;;;;;;1506:25:8;;;;;1498:65;;;;;-1:-1:-1;;;1498:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1573:33:8;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1573:40:8;1609:4;1573:40;;;1431:189::o;737:119:4:-;793:21;806:7;793:8;:12;;;;;;:21;;;;:::i;:::-;829:20;;-1:-1:-1;;;;;829:20:4;;;;;;;;737:119;:::o;260:175:3:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:3;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:3;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:3;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:3;;867:68;;;;-1:-1:-1;;;867:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:3;:11;:20;;;;;;;;;;;;;;;779:200::o;400:610:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;400:610:19;;;-1:-1:-1;400:610:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "400:610:19:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:610:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:133:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;907:133:8;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1101:83:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1101:83:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4497:199:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4497:199:43;;:::i;:::-;;;;;;;;;;;;;;;;;;;3803:409;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3803:409:43;;;;;;;;;:::i;:::-;;901:107:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;901:107:19;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;901:107:19;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;901:107:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;901:107:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;901:107:19;;-1:-1:-1;901:107:19;;-1:-1:-1;;;;;901:107:19:i;2132:94:45:-;;;:::i;:::-;;;;;;;;;;;;;;;;6135:284:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6135:284:43;;;;;;;;;;;;;;;;;;:::i;1751:228:45:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1751:228:45;;;;;;;;;:::i;1096:132:49:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1096:132:49;;;;;;;;;:::i;7050::43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7050:132:43;;;;;;;;;;;;;;;;;;:::i;840:230:44:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;840:230:44;;:::i;667:100:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;667:100:19;;:::i;2564:195:45:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2564:195:45;;:::i;1292:209:48:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1292:209:48;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1292:209:48;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1292:209:48;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1292:209:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1292:209:48;;-1:-1:-1;1292:209:48;;-1:-1:-1;;;;;1292:209:48:i;3160:222:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3160:222:43;;:::i;2735:206::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2735:206:43;;;;:::i;773:122:19:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;773:122:19;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;773:122:19;;;;;;;;;;;;;;;;;1293:87:47;;;:::i;560:90:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;560:90:4;;;;:::i;656:75::-;;;:::i;4989:242:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4989:242:43;;;;;;;;;;;:::i;447:107:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;447:107:4;;;;:::i;7885:262:43:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7885:262:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7885:262:43;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7885:262:43;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7885:262:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7885:262:43;;-1:-1:-1;7885:262:43;;-1:-1:-1;;;;;7885:262:43:i;1580:201:47:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1580:201:47;;:::i;5553:145:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5553:145:43;;;;;;;;;;;:::i;907:133:8:-;1000:33;;977:4;1000:33;;;;;;;;;;;;;;907:133::o;1101:83:47:-;1172:5;1165:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:13;;1165:12;;1172:5;;1165:12;;1172:5;1165:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:83;;:::o;4497:199:43:-;4556:7;4583:16;4591:7;4583;:16::i;:::-;4575:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4665:24:43;;;;:15;:24;;;;;;;;;4497:199::o;3803:409::-;3866:13;3882:16;3890:7;3882;:16::i;:::-;3866:32;;3922:5;3916:11;;:2;:11;;;;3908:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3983:10;:19;;;;;:58;;;4006:35;4023:5;4030:10;4006:16;:35::i;:::-;3975:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4133:24;;;;:15;:24;;;;;;:29;;;;;;;;;;;;;;4177:28;;4133:24;;4177:28;;;;;;;3803:409;;;:::o;901:107:19:-;975:26;988:7;997:3;975:12;:26::i;:::-;901:107;;:::o;2132:94:45:-;2202:10;:17;2132:94;:::o;6135:284:43:-;6277:39;6296:10;6308:7;6277:18;:39::i;:::-;6269:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6380:32;6394:4;6400:2;6404:7;6380:13;:32::i;:::-;6135:284;;;:::o;1751:228:45:-;1831:7;1866:16;1876:5;1866:9;:16::i;:::-;1858:5;:24;1850:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1946:19;;;;;;;:12;:19;;;;;:26;;1966:5;;1946:26;;;;;;;;;;;;;;1939:33;;1751:228;;;;:::o;1096:132:49:-;1166:4;350:20:4;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1182:18:49;1188:2;1192:7;1182:5;:18::i;:::-;-1:-1:-1;1217:4:49;1096:132;;;;:::o;7050::43:-;7136:39;7153:4;7159:2;7163:7;7136:39;;;;;;;;;;;;:16;:39::i;840:230:44:-;948:39;967:10;979:7;948:18;:39::i;:::-;940:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:14;1055:7;1049:5;:14::i;:::-;840:230;:::o;667:100:19:-;721:4;744:16;752:7;744;:16::i;:::-;737:23;667:100;-1:-1:-1;;667:100:19:o;2564:195:45:-;2622:7;2657:13;:11;:13::i;:::-;2649:5;:21;2641:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:10;2746:5;2735:17;;;;;;;;;;;;;;;;2728:24;;2564:195;;;:::o;1292:209:48:-;1398:4;350:20:4;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:18:48;1420:2;1424:7;1414:5;:18::i;:::-;1442:31;1455:7;1464:8;1442:12;:31::i;:::-;-1:-1:-1;1490:4:48;1292:209;;;;;:::o;3160:222:43:-;3215:7;3250:20;;;:11;:20;;;;;;;;3288:19;3280:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:206;2790:7;2817:19;;;2809:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2900:24;;;;;;;:17;:24;;;;;:34;;:32;:34::i;773:122:19:-;832:16;867:21;882:5;867:14;:21::i;:::-;860:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:122;;;:::o;1293:87:47:-;1366:7;1359:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:13;;1359:14;;1366:7;;1359:14;;1366:7;1359:14;;;;;;;;;;;;;;;;;;;;;;;;560:90:4;350:20;359:10;350:8;:20::i;:::-;342:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:19;635:7;624:10;:19::i;656:75::-;699:25;713:10;699:13;:25::i;:::-;656:75::o;4989:242:43:-;5068:16;;;5074:10;5068:16;;5060:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5143:10;5124:30;;;;:18;:30;;;;;;;;;:34;;;;;;;;;;;;:45;;;;;;;;;;;;;5184:40;;;;;;;5124:34;;5143:10;5184:40;;;;;;;;;;;4989:242;;:::o;447:107:4:-;503:4;526:21;:8;539:7;526:21;:12;:21;:::i;7885:262:43:-;7991:31;8004:4;8010:2;8014:7;7991:12;:31::i;:::-;8040:47;8062:4;8068:2;8072:7;8081:5;8040:21;:47::i;:::-;8032:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7885:262;;;;:::o;1580:201:47:-;1638:13;1671:16;1679:7;1671;:16::i;:::-;1663:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:19;;;;:10;:19;;;;;;;;;1748:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:19;;1748:26;;1755:19;1748:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1748:26:47;;1580:201;-1:-1:-1;;;;;;1580:201:47:o;5553:145:43:-;5656:25;;;;5633:4;5656:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5553:145::o;8342:152::-;8399:4;8431:20;;;:11;:20;;;;;;;;8468:19;;;8342:152::o;2020:191:47:-;2105:16;2113:7;2105;:16::i;:::-;2097:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2179:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;8855:328:43:-;8940:4;8964:16;8972:7;8964;:16::i;:::-;8956:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9038:13;9054:16;9062:7;9054;:16::i;:::-;9038:32;;9099:5;9088:16;;:7;:16;;;:51;;;;9132:7;9108:31;;:20;9120:7;9108:11;:20::i;:::-;:31;;;9088:51;:87;;;;9143:32;9160:5;9167:7;9143:16;:32::i;:::-;9080:96;8855:328;-1:-1:-1;;;;8855:328:43:o;3134:239:45:-;3219:38;3239:4;3245:2;3249:7;3219:19;:38::i;:::-;3268:47;3301:4;3307:7;3268:32;:47::i;:::-;3326:40;3354:2;3358:7;3326:27;:40::i;3630:196::-;3693:24;3705:2;3709:7;3693:11;:24::i;:::-;3728:40;3756:2;3760:7;3728:27;:40::i;:::-;3779;3811:7;3779:31;:40::i;10532:90:43:-;10583:32;10589:16;10597:7;10589;:16::i;:::-;10607:7;10583:5;:32::i;1063:112:6:-;1154:14;;1063:112::o;4670:124:45:-;4768:19;;4732:17;4768:19;;;:12;:19;;;;;;4670:124::o;737:119:4:-;793:21;:8;806:7;793:21;:12;:21;:::i;:::-;829:20;;;;;;;;;;;737:119;:::o;862:127::-;921:24;:8;937:7;921:24;:15;:24;:::i;:::-;960:22;;;;;;;;;;;862:127;:::o;779:200:3:-;851:4;875:21;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;952:20:3;;:11;:20;;;;;;;;;;;;;;;779:200::o;12014:868:43:-;12134:4;12154:12;12177:23;12216:15;:2;:13;;;:15::i;:::-;12211:58;;12254:4;12247:11;;;;;;12211:58;12351:2;:7;;981:10;12395:16;;12413:10;12425:4;12431:7;12440:5;12372:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12372:74:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12372:74:43;;;22:32:-1;26:21;;;22:32;6:49;;12372:74:43;;;49:4:-1;25:18;;61:17;;12372:74:43;182:15:-1;12372:74:43;;;;179:29:-1;;;;160:49;;12351:105:43;;;12372:74;;12351:105;;-1:-1:-1;12351:105:43;;-1:-1:-1;25:18;-1:-1;12351:105:43;-1:-1:-1;12351:105:43;;-1:-1:-1;12351:105:43;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12351:105:43;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;12470:17:43;;12327:129;;-1:-1:-1;12327:129:43;-1:-1:-1;12470:22:43;;;;:78;;-1:-1:-1;12496:32:43;;12532:16;;12496:32;;;;;;5:11:-1;;2:2;;;29:1;26;19:12;2:2;-1:-1;12496:32:43;:52;;;12470:78;12466:120;;;12571:4;12564:11;;;;;;12466:120;12620:2;:7;;749:10;12664:15;;12681:10;12693:4;12699:7;12708:5;12641:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12641:73:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12641:73:43;;;22:32:-1;26:21;;;22:32;6:49;;12641:73:43;;;49:4:-1;25:18;;61:17;;12641:73:43;182:15:-1;12641:73:43;;;;179:29:-1;;;;160:49;;12620:104:43;;;12641:73;;12620:104;;-1:-1:-1;12620:104:43;;-1:-1:-1;25:18;-1:-1;12620:104:43;-1:-1:-1;12620:104:43;;-1:-1:-1;12620:104:43;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12620:104:43;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;12738:17:43;;12596:128;;-1:-1:-1;12596:128:43;-1:-1:-1;12738:22:43;;;;:77;;-1:-1:-1;12764:32:43;;12800:15;;12764:32;;;;;;5:11:-1;;2:2;;;29:1;26;19:12;2:2;-1:-1;12764:32:43;:51;;;12738:77;12734:119;;;12838:4;12831:11;;;;;;12734:119;-1:-1:-1;12870:5:43;;12014:868;-1:-1:-1;;;;;;12014:868:43:o;10997:445::-;11110:4;11090:24;;:16;11098:7;11090;:16::i;:::-;:24;;;11082:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11177:16;;;11169:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11244:23;11259:7;11244:14;:23::i;:::-;11278;;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;11323:21;;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11367:20;;;;:11;:20;;;;;;:25;;;;;;;;;;;;;;11408:27;;11367:20;;11408:27;;;;;;;10997:445;;;:::o;6242:1128:45:-;6529:18;;;6504:22;6529:18;;;:12;:18;;;;;:25;:32;;6559:1;6529:32;:29;:32;:::i;:::-;6571:18;6592:26;;;:17;:26;;;;;;6504:57;;-1:-1:-1;6722:28:45;;;6718:323;;6788:18;;;6766:19;6788:18;;;:12;:18;;;;;:34;;6807:14;;6788:34;;;;;;;;;;;;;;6766:56;;6870:11;6837:12;:18;6850:4;6837:18;;;;;;;;;;;;;;;6856:10;6837:30;;;;;;;;;;;;;;;;;;;:44;;;;6953:30;;;:17;:30;;;;;:43;;;6718:323;7127:18;;;;;;;:12;:18;;;;;:27;;;;;;;;;:::i;:::-;;6242:1128;;;;:::o;5088:183::-;5201:16;;;;;;;;:12;:16;;;;;;;;:23;;5172:26;;;:17;:26;;;;;:52;;;5234:16;;;39:1:-1;23:18;;45:23;;5234:30:45;;;;;;;;5088:183::o;9428:325:43:-;9499:16;;;9491:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9570:16;9578:7;9570;:16::i;:::-;9569:17;9561:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9629:20;;;;:11;:20;;;;;;;;:25;;;;;;;;;;;;;9664:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9713;;9738:7;;9713:33;;;;9730:1;;9713:33;;9730:1;;9713:33;9428:325;;:::o;5466:161:45:-;5569:10;:17;;5542:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5596:24:45;;;;;;;5466:161::o;2504:240:47:-;2570:27;2582:5;2589:7;2570:11;:27::i;:::-;2653:19;;;;:10;:19;;;;;2647:33;;;;;;;;;;;;;;:38;2643:95;;2708:19;;;;:10;:19;;;;;2701:26;;;:::i;260:175:3:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:20;;:11;:20;;;;;;;;;;;:27;;;;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:20;;678:5;655:20;;;;;;;;;;;:28;;;;;;510:180::o;542:413:72:-;902:20;940:8;;;542:413::o;13044:171:43:-;13143:1;13107:24;;;:15;:24;;;;;;:38;:24;:38;13103:106;;13196:1;13161:24;;;:15;:24;;;;;:37;;;;;;13044:171::o;1276:108:6:-;1356:14;;:21;;1375:1;1356:21;:18;:21;:::i;:::-;1339:38;;1276:108::o;1181:89::-;1244:19;;1262:1;1244:19;;;1181:89::o;1274:134:12:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:12:o;4101:364:45:-;4167:27;4179:5;4186:7;4167:11;:27::i;:::-;4205:48;4238:5;4245:7;4205:32;:48::i;:::-;4401:1;4372:26;;;:17;:26;;;;;:30;4413:45;4390:7;4413:36;:45::i;1732:187:12:-;1818:7;1853:12;1845:6;;;;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:12;;;1732:187::o;10028:323:43:-;10122:5;10102:25;;:16;10110:7;10102;:16::i;:::-;:25;;;10094:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10179:23;10194:7;10179:14;:23::i;:::-;10213:24;;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;10290:1;10259:20;;;:11;:20;;;;;;:33;;;;;;10308:36;10271:7;;10290:1;10259:33;10308:36;;;;;10290:1;;10308:36;10028:323;;:::o;7658:1064:45:-;7932:10;:17;7907:22;;7932:24;;7954:1;7932:24;:21;:24;:::i;:::-;7966:18;7987:24;;;:15;:24;;;;;;8355:10;:26;;7907:49;;-1:-1:-1;7987:24:45;;7907:49;;8355:26;;;;;;;;;;;;;;8333:48;;8417:11;8392:10;8403;8392:22;;;;;;;;;;;;;;;;;;;:36;;;;8496:28;;;:15;:28;;;;;;:41;;;8658:10;:19;;;;;;;;;:::i;:::-;-1:-1:-1;;;8714:1:45;8687:24;;;-1:-1:-1;8687:15:45;:24;;;;;:28;7658:1064::o;400:610:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;400:610:19;;;-1:-1:-1;400:610:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../token/KIP17/KIP17Full.sol\";\nimport \"../token/KIP17/KIP17Mintable.sol\";\nimport \"../token/KIP17/KIP17MetadataMintable.sol\";\nimport \"../token/KIP17/KIP17Burnable.sol\";\n\n/**\n * @title KIP17FullMock\n * This mock just provides public functions for setting metadata URI, getting all tokens of an owner,\n * checking token existence, removal of a token from an address\n */\ncontract KIP17FullMock is KIP17Full, KIP17Mintable, KIP17MetadataMintable, KIP17Burnable {\n    constructor (string memory name, string memory symbol) public KIP17Mintable() KIP17Full(name, symbol) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function exists(uint256 tokenId) public view returns (bool) {\n        return _exists(tokenId);\n    }\n\n    function tokensOfOwner(address owner) public view returns (uint256[] memory) {\n        return _tokensOfOwner(owner);\n    }\n\n    function setTokenURI(uint256 tokenId, string memory uri) public {\n        _setTokenURI(tokenId, uri);\n    }\n}\n",
  "sourcePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/mocks/KIP17FullMock.sol",
  "ast": {
    "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/mocks/KIP17FullMock.sol",
    "exportedSymbols": {
      "KIP17FullMock": [
        1415
      ]
    },
    "id": 1416,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1350,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Full.sol",
        "file": "../token/KIP17/KIP17Full.sol",
        "id": 1351,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3482,
        "src": "25:38:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Mintable.sol",
        "file": "../token/KIP17/KIP17Mintable.sol",
        "id": 1352,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3701,
        "src": "64:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17MetadataMintable.sol",
        "file": "../token/KIP17/KIP17MetadataMintable.sol",
        "id": 1353,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3662,
        "src": "107:50:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol",
        "file": "../token/KIP17/KIP17Burnable.sol",
        "id": 1354,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3121,
        "src": "158:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1355,
              "name": "KIP17Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3481,
              "src": "426:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17Full_$3481",
                "typeString": "contract KIP17Full"
              }
            },
            "id": 1356,
            "nodeType": "InheritanceSpecifier",
            "src": "426:9:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1357,
              "name": "KIP17Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3700,
              "src": "437:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17Mintable_$3700",
                "typeString": "contract KIP17Mintable"
              }
            },
            "id": 1358,
            "nodeType": "InheritanceSpecifier",
            "src": "437:13:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1359,
              "name": "KIP17MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3661,
              "src": "452:21:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17MetadataMintable_$3661",
                "typeString": "contract KIP17MetadataMintable"
              }
            },
            "id": 1360,
            "nodeType": "InheritanceSpecifier",
            "src": "452:21:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1361,
              "name": "KIP17Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3120,
              "src": "475:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17Burnable_$3120",
                "typeString": "contract KIP17Burnable"
              }
            },
            "id": 1362,
            "nodeType": "InheritanceSpecifier",
            "src": "475:13:19"
          }
        ],
        "contractDependencies": [
          357,
          520,
          572,
          2376,
          2403,
          2438,
          3081,
          3120,
          3457,
          3481,
          3610,
          3661,
          3700
        ],
        "contractKind": "contract",
        "documentation": "@title KIP17FullMock\nThis mock just provides public functions for setting metadata URI, getting all tokens of an owner,\nchecking token existence, removal of a token from an address",
        "fullyImplemented": true,
        "id": 1415,
        "linearizedBaseContracts": [
          1415,
          3120,
          3661,
          3700,
          357,
          3481,
          3610,
          2438,
          3457,
          2403,
          3081,
          2376,
          572,
          520
        ],
        "name": "KIP17FullMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1375,
              "nodeType": "Block",
              "src": "597:64:19",
              "statements": []
            },
            "documentation": null,
            "id": 1376,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 1369,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1368,
                  "name": "KIP17Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3700,
                  "src": "557:13:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KIP17Mintable_$3700_$",
                    "typeString": "type(contract KIP17Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "557:15:19"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1371,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1364,
                    "src": "583:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1372,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1366,
                    "src": "589:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1373,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1370,
                  "name": "KIP17Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3481,
                  "src": "573:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KIP17Full_$3481_$",
                    "typeString": "type(contract KIP17Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "573:23:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "508:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1366,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "528:20:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "507:42:19"
            },
            "returnParameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:19"
            },
            "scope": 1415,
            "src": "495:166:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1387,
              "nodeType": "Block",
              "src": "727:40:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1384,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "752:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1383,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2763,
                      "src": "744:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1382,
                  "id": 1386,
                  "nodeType": "Return",
                  "src": "737:23:19"
                }
              ]
            },
            "documentation": null,
            "id": 1388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1378,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1388,
                  "src": "683:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:17:19"
            },
            "returnParameters": {
              "id": 1382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1388,
                  "src": "721:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "720:6:19"
            },
            "scope": 1415,
            "src": "667:100:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1400,
              "nodeType": "Block",
              "src": "850:45:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1397,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "882:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1396,
                      "name": "_tokensOfOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3307,
                      "src": "867:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (address) view returns (uint256[] storage pointer)"
                      }
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "functionReturnParameters": 1395,
                  "id": 1399,
                  "nodeType": "Return",
                  "src": "860:28:19"
                }
              ]
            },
            "documentation": null,
            "id": 1401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1390,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1401,
                  "src": "796:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "795:15:19"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1401,
                  "src": "832:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1392,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "832:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1393,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "832:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "831:18:19"
            },
            "scope": 1415,
            "src": "773:122:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1413,
              "nodeType": "Block",
              "src": "965:43:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1409,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1403,
                        "src": "988:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1410,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "997:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1408,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3579,
                      "src": "975:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "975:26:19"
                }
              ]
            },
            "documentation": null,
            "id": 1414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1403,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1414,
                  "src": "922:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1414,
                  "src": "939:17:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "921:36:19"
            },
            "returnParameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:0:19"
            },
            "scope": 1415,
            "src": "901:107:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1416,
        "src": "400:610:19"
      }
    ],
    "src": "0:1011:19"
  },
  "legacyAST": {
    "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/mocks/KIP17FullMock.sol",
    "exportedSymbols": {
      "KIP17FullMock": [
        1415
      ]
    },
    "id": 1416,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1350,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Full.sol",
        "file": "../token/KIP17/KIP17Full.sol",
        "id": 1351,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3482,
        "src": "25:38:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Mintable.sol",
        "file": "../token/KIP17/KIP17Mintable.sol",
        "id": 1352,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3701,
        "src": "64:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17MetadataMintable.sol",
        "file": "../token/KIP17/KIP17MetadataMintable.sol",
        "id": 1353,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3662,
        "src": "107:50:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol",
        "file": "../token/KIP17/KIP17Burnable.sol",
        "id": 1354,
        "nodeType": "ImportDirective",
        "scope": 1416,
        "sourceUnit": 3121,
        "src": "158:42:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1355,
              "name": "KIP17Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3481,
              "src": "426:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17Full_$3481",
                "typeString": "contract KIP17Full"
              }
            },
            "id": 1356,
            "nodeType": "InheritanceSpecifier",
            "src": "426:9:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1357,
              "name": "KIP17Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3700,
              "src": "437:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17Mintable_$3700",
                "typeString": "contract KIP17Mintable"
              }
            },
            "id": 1358,
            "nodeType": "InheritanceSpecifier",
            "src": "437:13:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1359,
              "name": "KIP17MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3661,
              "src": "452:21:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17MetadataMintable_$3661",
                "typeString": "contract KIP17MetadataMintable"
              }
            },
            "id": 1360,
            "nodeType": "InheritanceSpecifier",
            "src": "452:21:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1361,
              "name": "KIP17Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3120,
              "src": "475:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17Burnable_$3120",
                "typeString": "contract KIP17Burnable"
              }
            },
            "id": 1362,
            "nodeType": "InheritanceSpecifier",
            "src": "475:13:19"
          }
        ],
        "contractDependencies": [
          357,
          520,
          572,
          2376,
          2403,
          2438,
          3081,
          3120,
          3457,
          3481,
          3610,
          3661,
          3700
        ],
        "contractKind": "contract",
        "documentation": "@title KIP17FullMock\nThis mock just provides public functions for setting metadata URI, getting all tokens of an owner,\nchecking token existence, removal of a token from an address",
        "fullyImplemented": true,
        "id": 1415,
        "linearizedBaseContracts": [
          1415,
          3120,
          3661,
          3700,
          357,
          3481,
          3610,
          2438,
          3457,
          2403,
          3081,
          2376,
          572,
          520
        ],
        "name": "KIP17FullMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1375,
              "nodeType": "Block",
              "src": "597:64:19",
              "statements": []
            },
            "documentation": null,
            "id": 1376,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 1369,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1368,
                  "name": "KIP17Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3700,
                  "src": "557:13:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KIP17Mintable_$3700_$",
                    "typeString": "type(contract KIP17Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "557:15:19"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1371,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1364,
                    "src": "583:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1372,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1366,
                    "src": "589:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1373,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1370,
                  "name": "KIP17Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3481,
                  "src": "573:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_KIP17Full_$3481_$",
                    "typeString": "type(contract KIP17Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "573:23:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "508:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1366,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "528:20:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "507:42:19"
            },
            "returnParameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:0:19"
            },
            "scope": 1415,
            "src": "495:166:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1387,
              "nodeType": "Block",
              "src": "727:40:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1384,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "752:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1383,
                      "name": "_exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2763,
                      "src": "744:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1382,
                  "id": 1386,
                  "nodeType": "Return",
                  "src": "737:23:19"
                }
              ]
            },
            "documentation": null,
            "id": 1388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1378,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1388,
                  "src": "683:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:17:19"
            },
            "returnParameters": {
              "id": 1382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1388,
                  "src": "721:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "720:6:19"
            },
            "scope": 1415,
            "src": "667:100:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1400,
              "nodeType": "Block",
              "src": "850:45:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1397,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "882:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1396,
                      "name": "_tokensOfOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3307,
                      "src": "867:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (address) view returns (uint256[] storage pointer)"
                      }
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "functionReturnParameters": 1395,
                  "id": 1399,
                  "nodeType": "Return",
                  "src": "860:28:19"
                }
              ]
            },
            "documentation": null,
            "id": 1401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1390,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1401,
                  "src": "796:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "795:15:19"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1401,
                  "src": "832:16:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1392,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "832:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1393,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "832:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "831:18:19"
            },
            "scope": 1415,
            "src": "773:122:19",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1413,
              "nodeType": "Block",
              "src": "965:43:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1409,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1403,
                        "src": "988:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1410,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1405,
                        "src": "997:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1408,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3579,
                      "src": "975:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:26:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "975:26:19"
                }
              ]
            },
            "documentation": null,
            "id": 1414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1403,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1414,
                  "src": "922:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1405,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 1414,
                  "src": "939:17:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "921:36:19"
            },
            "returnParameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:0:19"
            },
            "scope": 1415,
            "src": "901:107:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1416,
        "src": "400:610:19"
      }
    ],
    "src": "0:1011:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2022-04-05T10:24:04.353Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific KIP17 token.",
        "params": {
          "tokenId": "uint256 id of the KIP17 token to be burned."
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IKIP13.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "KIP17FullMock This mock just provides public functions for setting metadata URI, getting all tokens of an owner, checking token existence, removal of a token from an address"
  },
  "userdoc": {
    "methods": {}
  }
}