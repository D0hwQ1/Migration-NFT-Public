{
  "contractName": "KIP17Burnable",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"KIP17 Token that can be irreversibly burned (destroyed). See http://kips.klaytn.com/KIPs/kip-17-non_fungible_token\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"burn(uint256)\":{\"details\":\"Burns a specific KIP17 token.\",\"params\":{\"tokenId\":\"uint256 id of the KIP17 token to be burned.\"}},\"constructor\":{\"details\":\"Constructor function.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onKIP17Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onKIP17Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IKIP13.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"KIP17 Burnable Token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol\":\"KIP17Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzz-raw://072e8b5a1b5acfc2acba9b6fb87d1dc57065aad44572617ad46b014074969eb3\",\"dweb:/ipfs/QmVTDHUriaxBJqiWCWgWC8vYaYYfXSz883LsowzTx1DcpK\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/introspection/IKIP13.sol\":{\"keccak256\":\"0xf7415711dbec40bc633af7d8cb5c3c0bc3d1ed97fd8c13f795a03eb3073ea219\",\"urls\":[\"bzz-raw://c3583b6a39425cc359116200869b24b50c2293c6e68d09c4d4b804861b431ae0\",\"dweb:/ipfs/QmWZWD7oEtz7QbM5AmUtrbZpDVkxzeX8JGcVkUVmvRRaVa\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/introspection/KIP13.sol\":{\"keccak256\":\"0x84681701e79f53ba1e9660b6a130bba31880d66cee996ab7d5567d239155c6da\",\"urls\":[\"bzz-raw://f35082a91314003570fca4b2426cd3f79db0eb846a456842db4a11f473db924d\",\"dweb:/ipfs/QmYdHAyrXSKjiDxji2L7bTpuPSSqjkwaKT7WM98Yrcy8KD\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzz-raw://90dceab42713246639100b87d6650037d68e4a2ab2dd4b5768c3ed35d6b3a4a0\",\"dweb:/ipfs/QmQ42UW5nchMoYP9bU9F1AJga5chG8j92fCPkURpiDKsCu\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IKIP17.sol\":{\"keccak256\":\"0x0b30e5fe64932d8b9343c7897ebb7a0ac15a15577ce5ec1f18c3ba4396120de0\",\"urls\":[\"bzz-raw://6acdc475b0e3ef3844ebd4fe82d4c7339dc396c88ec9f7e5be74cab763c3a321\",\"dweb:/ipfs/QmVvB1y1NLSjooVs5V47YGtESVQ5w3B5j2Md32N3EmRouh\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/IKIP17Receiver.sol\":{\"keccak256\":\"0xf3dee67a4a395e20ad0459e1f255b9c563272d2fb6752e7421c1302cfcf00ff0\",\"urls\":[\"bzz-raw://543148fce433ba69b724c8509064342f7685b5186684f54cfae8cdce709dd0ca\",\"dweb:/ipfs/QmeZxw2qq6wft5tBmHdjQH6u21qVP72dYFVPRcNiPJJR4T\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17.sol\":{\"keccak256\":\"0x3ffc95c0da23762b273dad189c551bc0591811ca96026b0da064464aa1f1ec4f\",\"urls\":[\"bzz-raw://a0092b30745a43e2a380e104baa47e1592627397c641b70a7bcc17829d0ce598\",\"dweb:/ipfs/Qmc5qcUgBzxzNe2jiUic3jG1YLS56XFvrwbavKEyzrDJ5h\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol\":{\"keccak256\":\"0x963af48c3e002f850c400d4d4a831232091c7c90f40ef45ad85e261937d3b65a\",\"urls\":[\"bzz-raw://4e13494d962b232d8551a49c49a8ecc6c2139bf792ae95488375d6ed7a59a3b6\",\"dweb:/ipfs/QmW1xQCzhkjn4N1MzETc9rRDBhuf7PVY866jEJ56LuMTiX\"]},\"/root/Proj/Migration-Contract/contracts/klaytn-contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002a6301ffc9a760e01b6001600160e01b0361006116565b6100436380ac58cd60e01b6001600160e01b0361006116565b61005c630852cd8d60e31b6001600160e01b0361006116565b6100e5565b6001600160e01b031980821614156100c0576040805162461bcd60e51b815260206004820152601b60248201527f4b495031333a20696e76616c696420696e746572666163652069640000000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6117b2806100f46000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806342966c6811610081578063a22cb4651161005b578063a22cb465146102a7578063b88d4fde146102e2578063e985e9c5146103b5576100c9565b806342966c68146102285780636352211e1461024557806370a0823114610262576100c9565b8063095ea7b3116100b2578063095ea7b31461016757806323b872dd146101a257806342842e0e146101e5576100c9565b806301ffc9a7146100ce578063081812fc14610121575b600080fd5b61010d600480360360208110156100e457600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166103f0565b604080519115158252519081900360200190f35b61013e6004803603602081101561013757600080fd5b5035610427565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101a06004803603604081101561017d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104b0565b005b6101a0600480360360608110156101b857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610657565b6101a0600480360360608110156101fb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106c6565b6101a06004803603602081101561023e57600080fd5b50356106e1565b61013e6004803603602081101561025b57600080fd5b503561074c565b6102956004803603602081101561027857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166107cd565b60408051918252519081900360200190f35b6101a0600480360360408110156102bd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515610869565b6101a0600480360360808110156102f857600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610987945050505050565b61010d600480360360408110156103cb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166109f9565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b600061043282610a34565b610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806116f1602b913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006104bb8261074c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561055857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e6572604482015290519081900360640190fd5b3373ffffffffffffffffffffffffffffffffffffffff82161480610581575061058181336109f9565b6105d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603781526020018061171c6037913960400191505060405180910390fd5b60008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6106613382610a5e565b6106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806115ed6030913960400191505060405180910390fd5b6106c1838383610b50565b505050565b6106c183838360405180602001604052806000815250610987565b6106eb3382610a5e565b610740576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061164d602f913960400191505060405180910390fd5b61074981610d2e565b50565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff16806107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806115c56028913960400191505060405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821661083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061167c6029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090206107c790610d40565b73ffffffffffffffffffffffffffffffffffffffff82163314156108ee57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c65720000000000000000604482015290519081900360640190fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610992848484610657565b61099e84848484610d44565b6109f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161d6030913960400191505060405180910390fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b6000610a6982610a34565b610abe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611753602b913960400191505060405180910390fd5b6000610ac98361074c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b3857508373ffffffffffffffffffffffffffffffffffffffff16610b2084610427565b73ffffffffffffffffffffffffffffffffffffffff16145b80610b485750610b4881856109f9565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610b708261074c565b73ffffffffffffffffffffffffffffffffffffffff1614610bdc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806116a56028913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806115a26023913960400191505060405180910390fd5b610c51816112e4565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020610c7f90611344565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610cad9061135b565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610749610d3a8261074c565b82611364565b5490565b6000806060610d688673ffffffffffffffffffffffffffffffffffffffff166114a1565b610d7757600192505050610b48565b8573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610e44578181015183820152602001610e2c565b50505050905090810190601f168015610e715780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b60208310610f4257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610f05565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610fa4576040519150601f19603f3d011682016040523d82523d6000602084013e610fa9565b606091505b508051919350915015801590611017575080517f150b7a02000000000000000000000000000000000000000000000000000000009060208084019190811015610ff157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b1561102757600192505050610b48565b8573ffffffffffffffffffffffffffffffffffffffff16636745782b60e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156110f45781810151838201526020016110dc565b50505050905090810190601f1680156111215780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b602083106111f257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016111b5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611254576040519150601f19603f3d011682016040523d82523d6000602084013e611259565b606091505b5080519193509150158015906112c7575080517f6745782b0000000000000000000000000000000000000000000000000000000090602080840191908110156112a157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b156112d757600192505050610b48565b5060009695505050505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff161561074957600090815260026020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b805461135790600163ffffffff6114a716565b9055565b80546001019055565b8173ffffffffffffffffffffffffffffffffffffffff166113848261074c565b73ffffffffffffffffffffffffffffffffffffffff16146113f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116cd6024913960400191505060405180910390fd5b6113f9816112e4565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902061142790611344565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555182919073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b3b151590565b60006114e983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114f0565b9392505050565b60008184841115611599576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561155e578181015183820152602001611546565b50505050905090810190601f16801561158b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4b495031373a207472616e7366657220746f20746865207a65726f20616464726573734b495031373a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a207472616e7366657220746f206e6f6e204b49503137526563656976657220696d706c656d656e7465724b495031374275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734b495031373a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4b495031373a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656ea265627a7a723158205fb026ec8455fcfdc9e98ad5da746a43af9271eed52351e6393bb208e1ffb04e64736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c806342966c6811610081578063a22cb4651161005b578063a22cb465146102a7578063b88d4fde146102e2578063e985e9c5146103b5576100c9565b806342966c68146102285780636352211e1461024557806370a0823114610262576100c9565b8063095ea7b3116100b2578063095ea7b31461016757806323b872dd146101a257806342842e0e146101e5576100c9565b806301ffc9a7146100ce578063081812fc14610121575b600080fd5b61010d600480360360208110156100e457600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166103f0565b604080519115158252519081900360200190f35b61013e6004803603602081101561013757600080fd5b5035610427565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101a06004803603604081101561017d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356104b0565b005b6101a0600480360360608110156101b857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610657565b6101a0600480360360608110156101fb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106c6565b6101a06004803603602081101561023e57600080fd5b50356106e1565b61013e6004803603602081101561025b57600080fd5b503561074c565b6102956004803603602081101561027857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166107cd565b60408051918252519081900360200190f35b6101a0600480360360408110156102bd57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515610869565b6101a0600480360360808110156102f857600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184600183028401116401000000008311171561037457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610987945050505050565b61010d600480360360408110156103cb57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166109f9565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b600061043282610a34565b610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806116f1602b913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006104bb8261074c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561055857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e6572604482015290519081900360640190fd5b3373ffffffffffffffffffffffffffffffffffffffff82161480610581575061058181336109f9565b6105d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603781526020018061171c6037913960400191505060405180910390fd5b60008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6106613382610a5e565b6106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806115ed6030913960400191505060405180910390fd5b6106c1838383610b50565b505050565b6106c183838360405180602001604052806000815250610987565b6106eb3382610a5e565b610740576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061164d602f913960400191505060405180910390fd5b61074981610d2e565b50565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff16806107c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806115c56028913960400191505060405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821661083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602981526020018061167c6029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090206107c790610d40565b73ffffffffffffffffffffffffffffffffffffffff82163314156108ee57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c65720000000000000000604482015290519081900360640190fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610992848484610657565b61099e84848484610d44565b6109f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061161d6030913960400191505060405180910390fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b6000610a6982610a34565b610abe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611753602b913960400191505060405180910390fd5b6000610ac98361074c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b3857508373ffffffffffffffffffffffffffffffffffffffff16610b2084610427565b73ffffffffffffffffffffffffffffffffffffffff16145b80610b485750610b4881856109f9565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610b708261074c565b73ffffffffffffffffffffffffffffffffffffffff1614610bdc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806116a56028913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610c48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806115a26023913960400191505060405180910390fd5b610c51816112e4565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020610c7f90611344565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610cad9061135b565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610749610d3a8261074c565b82611364565b5490565b6000806060610d688673ffffffffffffffffffffffffffffffffffffffff166114a1565b610d7757600192505050610b48565b8573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610e44578181015183820152602001610e2c565b50505050905090810190601f168015610e715780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b60208310610f4257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610f05565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610fa4576040519150601f19603f3d011682016040523d82523d6000602084013e610fa9565b606091505b508051919350915015801590611017575080517f150b7a02000000000000000000000000000000000000000000000000000000009060208084019190811015610ff157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b1561102757600192505050610b48565b8573ffffffffffffffffffffffffffffffffffffffff16636745782b60e01b33898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156110f45781810151838201526020016110dc565b50505050905090810190601f1680156111215780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909a16999099178952518151919890975087965094509250829150849050835b602083106111f257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016111b5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611254576040519150601f19603f3d011682016040523d82523d6000602084013e611259565b606091505b5080519193509150158015906112c7575080517f6745782b0000000000000000000000000000000000000000000000000000000090602080840191908110156112a157600080fd5b50517fffffffff0000000000000000000000000000000000000000000000000000000016145b156112d757600192505050610b48565b5060009695505050505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff161561074957600090815260026020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b805461135790600163ffffffff6114a716565b9055565b80546001019055565b8173ffffffffffffffffffffffffffffffffffffffff166113848261074c565b73ffffffffffffffffffffffffffffffffffffffff16146113f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116cd6024913960400191505060405180910390fd5b6113f9816112e4565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902061142790611344565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555182919073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b3b151590565b60006114e983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114f0565b9392505050565b60008184841115611599576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561155e578181015183820152602001611546565b50505050905090810190601f16801561158b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4b495031373a207472616e7366657220746f20746865207a65726f20616464726573734b495031373a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a207472616e7366657220746f206e6f6e204b49503137526563656976657220696d706c656d656e7465724b495031374275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644b495031373a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734b495031373a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4b495031373a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4b495031373a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656ea265627a7a723158205fb026ec8455fcfdc9e98ad5da746a43af9271eed52351e6393bb208e1ffb04e64736f6c63430005110032",
  "sourceMap": "253:819:44:-;;;541:169;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;712:39:8;-1:-1:-1;;;;;;;;712:18:8;:39;:::i;:::-;2485::43;-1:-1:-1;;;;;;;;2485:18:43;:39;:::i;:::-;655:48:44;-1:-1:-1;;;;;;;;655:18:44;:48;:::i;:::-;253:819;;1431:189:8;-1:-1:-1;;;;;;1506:25:8;;;;;1498:65;;;;;-1:-1:-1;;;1498:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1573:33:8;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1573:40:8;1609:4;1573:40;;;1431:189::o;253:819:44:-;;;;;;;",
  "deployedSourceMap": "253:819:44:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:819:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:133:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;907:133:8;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4497:199:43;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4497:199:43;;:::i;:::-;;;;;;;;;;;;;;;;;;;3803:409;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3803:409:43;;;;;;;;;:::i;:::-;;6135:284;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6135:284:43;;;;;;;;;;;;;;;;;;:::i;7050:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7050:132:43;;;;;;;;;;;;;;;;;;:::i;840:230:44:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;840:230:44;;:::i;3160:222:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3160:222:43;;:::i;2735:206::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2735:206:43;;;;:::i;:::-;;;;;;;;;;;;;;;;4989:242;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4989:242:43;;;;;;;;;;;:::i;7885:262::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7885:262:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7885:262:43;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7885:262:43;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7885:262:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7885:262:43;;-1:-1:-1;7885:262:43;;-1:-1:-1;;;;;7885:262:43:i;5553:145::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5553:145:43;;;;;;;;;;;:::i;907:133:8:-;1000:33;;977:4;1000:33;;;;;;;;;;;;;;907:133::o;4497:199:43:-;4556:7;4583:16;4591:7;4583;:16::i;:::-;4575:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4665:24:43;;;;:15;:24;;;;;;;;;4497:199::o;3803:409::-;3866:13;3882:16;3890:7;3882;:16::i;:::-;3866:32;;3922:5;3916:11;;:2;:11;;;;3908:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3983:10;:19;;;;;:58;;;4006:35;4023:5;4030:10;4006:16;:35::i;:::-;3975:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4133:24;;;;:15;:24;;;;;;:29;;;;;;;;;;;;;;4177:28;;4133:24;;4177:28;;;;;;;3803:409;;;:::o;6135:284::-;6277:39;6296:10;6308:7;6277:18;:39::i;:::-;6269:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6380:32;6394:4;6400:2;6404:7;6380:13;:32::i;:::-;6135:284;;;:::o;7050:132::-;7136:39;7153:4;7159:2;7163:7;7136:39;;;;;;;;;;;;:16;:39::i;840:230:44:-;948:39;967:10;979:7;948:18;:39::i;:::-;940:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:14;1055:7;1049:5;:14::i;:::-;840:230;:::o;3160:222:43:-;3215:7;3250:20;;;:11;:20;;;;;;;;3288:19;3280:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3370:5;3160:222;-1:-1:-1;;3160:222:43:o;2735:206::-;2790:7;2817:19;;;2809:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2900:24;;;;;;;:17;:24;;;;;:34;;:32;:34::i;4989:242::-;5068:16;;;5074:10;5068:16;;5060:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5143:10;5124:30;;;;:18;:30;;;;;;;;;:34;;;;;;;;;;;;:45;;;;;;;;;;;;;5184:40;;;;;;;5124:34;;5143:10;5184:40;;;;;;;;;;;4989:242;;:::o;7885:262::-;7991:31;8004:4;8010:2;8014:7;7991:12;:31::i;:::-;8040:47;8062:4;8068:2;8072:7;8081:5;8040:21;:47::i;:::-;8032:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7885:262;;;;:::o;5553:145::-;5656:25;;;;5633:4;5656:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5553:145::o;8342:152::-;8399:4;8431:20;;;:11;:20;;;;;;;;8468:19;;;8342:152::o;8855:328::-;8940:4;8964:16;8972:7;8964;:16::i;:::-;8956:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9038:13;9054:16;9062:7;9054;:16::i;:::-;9038:32;;9099:5;9088:16;;:7;:16;;;:51;;;;9132:7;9108:31;;:20;9120:7;9108:11;:20::i;:::-;:31;;;9088:51;:87;;;;9143:32;9160:5;9167:7;9143:16;:32::i;:::-;9080:96;8855:328;-1:-1:-1;;;;8855:328:43:o;10997:445::-;11110:4;11090:24;;:16;11098:7;11090;:16::i;:::-;:24;;;11082:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11177:16;;;11169:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11244:23;11259:7;11244:14;:23::i;:::-;11278;;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;11323:21;;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11367:20;;;;:11;:20;;;;;;:25;;;;;;;;;;;;;;11408:27;;11367:20;;11408:27;;;;;;;10997:445;;;:::o;10532:90::-;10583:32;10589:16;10597:7;10589;:16::i;:::-;10607:7;10583:5;:32::i;1063:112:6:-;1154:14;;1063:112::o;12014:868:43:-;12134:4;12154:12;12177:23;12216:15;:2;:13;;;:15::i;:::-;12211:58;;12254:4;12247:11;;;;;;12211:58;12351:2;:7;;981:10;12395:16;;12413:10;12425:4;12431:7;12440:5;12372:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12372:74:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12372:74:43;;;22:32:-1;26:21;;;22:32;6:49;;12372:74:43;;;49:4:-1;25:18;;61:17;;12372:74:43;182:15:-1;12372:74:43;;;;179:29:-1;;;;160:49;;12351:105:43;;;12372:74;;12351:105;;-1:-1:-1;12351:105:43;;-1:-1:-1;25:18;-1:-1;12351:105:43;-1:-1:-1;12351:105:43;;-1:-1:-1;12351:105:43;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12351:105:43;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;12470:17:43;;12327:129;;-1:-1:-1;12327:129:43;-1:-1:-1;12470:22:43;;;;:78;;-1:-1:-1;12496:32:43;;12532:16;;12496:32;;;;;;5:11:-1;;2:2;;;29:1;26;19:12;2:2;-1:-1;12496:32:43;:52;;;12470:78;12466:120;;;12571:4;12564:11;;;;;;12466:120;12620:2;:7;;749:10;12664:15;;12681:10;12693:4;12699:7;12708:5;12641:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12641:73:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12641:73:43;;;22:32:-1;26:21;;;22:32;6:49;;12641:73:43;;;49:4:-1;25:18;;61:17;;12641:73:43;182:15:-1;12641:73:43;;;;179:29:-1;;;;160:49;;12620:104:43;;;12641:73;;12620:104;;-1:-1:-1;12620:104:43;;-1:-1:-1;25:18;-1:-1;12620:104:43;-1:-1:-1;12620:104:43;;-1:-1:-1;12620:104:43;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;12620:104:43;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;12738:17:43;;12596:128;;-1:-1:-1;12596:128:43;-1:-1:-1;12738:22:43;;;;:77;;-1:-1:-1;12764:32:43;;12800:15;;12764:32;;;;;;5:11:-1;;2:2;;;29:1;26;19:12;2:2;-1:-1;12764:32:43;:51;;;12738:77;12734:119;;;12838:4;12831:11;;;;;;12734:119;-1:-1:-1;12870:5:43;;12014:868;-1:-1:-1;;;;;;12014:868:43:o;13044:171::-;13143:1;13107:24;;;:15;:24;;;;;;:38;:24;:38;13103:106;;13196:1;13161:24;;;:15;:24;;;;;:37;;;;;;13044:171::o;1276:108:6:-;1356:14;;:21;;1375:1;1356:21;:18;:21;:::i;:::-;1339:38;;1276:108::o;1181:89::-;1244:19;;1262:1;1244:19;;;1181:89::o;10028:323:43:-;10122:5;10102:25;;:16;10110:7;10102;:16::i;:::-;:25;;;10094:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10179:23;10194:7;10179:14;:23::i;:::-;10213:24;;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;10290:1;10259:20;;;:11;:20;;;;;;:33;;;;;;10308:36;10271:7;;10290:1;10259:33;10308:36;;;;;10290:1;;10308:36;10028:323;;:::o;542:413:72:-;902:20;940:8;;;542:413::o;1274:134:12:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:12:o;1732:187::-;1818:7;1853:12;1845:6;;;;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:12;;;1732:187::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./KIP17.sol\";\nimport \"../../introspection/KIP13.sol\";\n\n/**\n * @title KIP17 Burnable Token\n * @dev KIP17 Token that can be irreversibly burned (destroyed).\n * See http://kips.klaytn.com/KIPs/kip-17-non_fungible_token\n */\ncontract KIP17Burnable is KIP13, KIP17 {\n    /*\n     *     bytes4(keccak256('burn(uint256)')) == 0x42966c68\n     *\n     *     => 0x42966c68 == 0x42966c68\n     */\n    bytes4 private constant _INTERFACE_ID_KIP17_BURNABLE = 0x42966c68;\n\n    /**\n     * @dev Constructor function.\n     */\n    constructor () public {\n        // register the supported interface to conform to KIP17Burnable via KIP13\n        _registerInterface(_INTERFACE_ID_KIP17_BURNABLE);\n    }\n\n    /**\n     * @dev Burns a specific KIP17 token.\n     * @param tokenId uint256 id of the KIP17 token to be burned.\n     */\n    function burn(uint256 tokenId) public {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(msg.sender, tokenId), \"KIP17Burnable: caller is not owner nor approved\");\n        _burn(tokenId);\n    }\n}\n",
  "sourcePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol",
  "ast": {
    "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol",
    "exportedSymbols": {
      "KIP17Burnable": [
        3120
      ]
    },
    "id": 3121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3083,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:44"
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17.sol",
        "file": "./KIP17.sol",
        "id": 3084,
        "nodeType": "ImportDirective",
        "scope": 3121,
        "sourceUnit": 3082,
        "src": "25:21:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/introspection/KIP13.sol",
        "file": "../../introspection/KIP13.sol",
        "id": 3085,
        "nodeType": "ImportDirective",
        "scope": 3121,
        "sourceUnit": 573,
        "src": "47:39:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3086,
              "name": "KIP13",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 572,
              "src": "279:5:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP13_$572",
                "typeString": "contract KIP13"
              }
            },
            "id": 3087,
            "nodeType": "InheritanceSpecifier",
            "src": "279:5:44"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3088,
              "name": "KIP17",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3081,
              "src": "286:5:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17_$3081",
                "typeString": "contract KIP17"
              }
            },
            "id": 3089,
            "nodeType": "InheritanceSpecifier",
            "src": "286:5:44"
          }
        ],
        "contractDependencies": [
          520,
          572,
          2376,
          3081
        ],
        "contractKind": "contract",
        "documentation": "@title KIP17 Burnable Token\n@dev KIP17 Token that can be irreversibly burned (destroyed).\nSee http://kips.klaytn.com/KIPs/kip-17-non_fungible_token",
        "fullyImplemented": true,
        "id": 3120,
        "linearizedBaseContracts": [
          3120,
          3081,
          2376,
          572,
          520
        ],
        "name": "KIP17Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3092,
            "name": "_INTERFACE_ID_KIP17_BURNABLE",
            "nodeType": "VariableDeclaration",
            "scope": 3120,
            "src": "419:65:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 3090,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "419:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783432393636633638",
              "id": 3091,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "474:10:44",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1117154408_by_1",
                "typeString": "int_const 1117154408"
              },
              "value": "0x42966c68"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3099,
              "nodeType": "Block",
              "src": "563:147:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3096,
                        "name": "_INTERFACE_ID_KIP17_BURNABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "674:28:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 3095,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "655:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "655:48:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3098,
                  "nodeType": "ExpressionStatement",
                  "src": "655:48:44"
                }
              ]
            },
            "documentation": "@dev Constructor function.",
            "id": 3100,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:44"
            },
            "returnParameters": {
              "id": 3094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:44"
            },
            "scope": 3120,
            "src": "541:169:44",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3118,
              "nodeType": "Block",
              "src": "878:192:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3107,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6745,
                              "src": "967:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "967:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3109,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3102,
                            "src": "979:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3106,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2802,
                          "src": "948:18:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 3110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "948:39:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4b495031374275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 3111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "989:49:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad61f6a1a43e54e98c1943d6a9b2af961e976ad59446ca1994cee888accfaa24",
                          "typeString": "literal_string \"KIP17Burnable: caller is not owner nor approved\""
                        },
                        "value": "KIP17Burnable: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad61f6a1a43e54e98c1943d6a9b2af961e976ad59446ca1994cee888accfaa24",
                          "typeString": "literal_string \"KIP17Burnable: caller is not owner nor approved\""
                        }
                      ],
                      "id": 3105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6749
                      ],
                      "referencedDeclaration": 6749,
                      "src": "940:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:99:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3113,
                  "nodeType": "ExpressionStatement",
                  "src": "940:99:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3115,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3102,
                        "src": "1055:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3114,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2890,
                        2903
                      ],
                      "referencedDeclaration": 2903,
                      "src": "1049:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:14:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3117,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:14:44"
                }
              ]
            },
            "documentation": "@dev Burns a specific KIP17 token.\n@param tokenId uint256 id of the KIP17 token to be burned.",
            "id": 3119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3102,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "854:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "853:17:44"
            },
            "returnParameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:0:44"
            },
            "scope": 3120,
            "src": "840:230:44",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3121,
        "src": "253:819:44"
      }
    ],
    "src": "0:1073:44"
  },
  "legacyAST": {
    "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17Burnable.sol",
    "exportedSymbols": {
      "KIP17Burnable": [
        3120
      ]
    },
    "id": 3121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3083,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:44"
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/token/KIP17/KIP17.sol",
        "file": "./KIP17.sol",
        "id": 3084,
        "nodeType": "ImportDirective",
        "scope": 3121,
        "sourceUnit": 3082,
        "src": "25:21:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/Proj/Migration-Contract/contracts/klaytn-contracts/introspection/KIP13.sol",
        "file": "../../introspection/KIP13.sol",
        "id": 3085,
        "nodeType": "ImportDirective",
        "scope": 3121,
        "sourceUnit": 573,
        "src": "47:39:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3086,
              "name": "KIP13",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 572,
              "src": "279:5:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP13_$572",
                "typeString": "contract KIP13"
              }
            },
            "id": 3087,
            "nodeType": "InheritanceSpecifier",
            "src": "279:5:44"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3088,
              "name": "KIP17",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3081,
              "src": "286:5:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KIP17_$3081",
                "typeString": "contract KIP17"
              }
            },
            "id": 3089,
            "nodeType": "InheritanceSpecifier",
            "src": "286:5:44"
          }
        ],
        "contractDependencies": [
          520,
          572,
          2376,
          3081
        ],
        "contractKind": "contract",
        "documentation": "@title KIP17 Burnable Token\n@dev KIP17 Token that can be irreversibly burned (destroyed).\nSee http://kips.klaytn.com/KIPs/kip-17-non_fungible_token",
        "fullyImplemented": true,
        "id": 3120,
        "linearizedBaseContracts": [
          3120,
          3081,
          2376,
          572,
          520
        ],
        "name": "KIP17Burnable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3092,
            "name": "_INTERFACE_ID_KIP17_BURNABLE",
            "nodeType": "VariableDeclaration",
            "scope": 3120,
            "src": "419:65:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 3090,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "419:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783432393636633638",
              "id": 3091,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "474:10:44",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1117154408_by_1",
                "typeString": "int_const 1117154408"
              },
              "value": "0x42966c68"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3099,
              "nodeType": "Block",
              "src": "563:147:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3096,
                        "name": "_INTERFACE_ID_KIP17_BURNABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "674:28:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 3095,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "655:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "655:48:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3098,
                  "nodeType": "ExpressionStatement",
                  "src": "655:48:44"
                }
              ]
            },
            "documentation": "@dev Constructor function.",
            "id": 3100,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:2:44"
            },
            "returnParameters": {
              "id": 3094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:0:44"
            },
            "scope": 3120,
            "src": "541:169:44",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3118,
              "nodeType": "Block",
              "src": "878:192:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3107,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6745,
                              "src": "967:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "967:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3109,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3102,
                            "src": "979:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3106,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2802,
                          "src": "948:18:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 3110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "948:39:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4b495031374275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 3111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "989:49:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad61f6a1a43e54e98c1943d6a9b2af961e976ad59446ca1994cee888accfaa24",
                          "typeString": "literal_string \"KIP17Burnable: caller is not owner nor approved\""
                        },
                        "value": "KIP17Burnable: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad61f6a1a43e54e98c1943d6a9b2af961e976ad59446ca1994cee888accfaa24",
                          "typeString": "literal_string \"KIP17Burnable: caller is not owner nor approved\""
                        }
                      ],
                      "id": 3105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6748,
                        6749
                      ],
                      "referencedDeclaration": 6749,
                      "src": "940:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:99:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3113,
                  "nodeType": "ExpressionStatement",
                  "src": "940:99:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3115,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3102,
                        "src": "1055:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3114,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2890,
                        2903
                      ],
                      "referencedDeclaration": 2903,
                      "src": "1049:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:14:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3117,
                  "nodeType": "ExpressionStatement",
                  "src": "1049:14:44"
                }
              ]
            },
            "documentation": "@dev Burns a specific KIP17 token.\n@param tokenId uint256 id of the KIP17 token to be burned.",
            "id": 3119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3102,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3119,
                  "src": "854:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "853:17:44"
            },
            "returnParameters": {
              "id": 3104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:0:44"
            },
            "scope": 3120,
            "src": "840:230:44",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3121,
        "src": "253:819:44"
      }
    ],
    "src": "0:1073:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2022-04-05T10:24:04.411Z",
  "devdoc": {
    "details": "KIP17 Token that can be irreversibly burned (destroyed). See http://kips.klaytn.com/KIPs/kip-17-non_fungible_token",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "burn(uint256)": {
        "details": "Burns a specific KIP17 token.",
        "params": {
          "tokenId": "uint256 id of the KIP17 token to be burned."
        }
      },
      "constructor": {
        "details": "Constructor function."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IKIP13.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "KIP17 Burnable Token"
  },
  "userdoc": {
    "methods": {}
  }
}